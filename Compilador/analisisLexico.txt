Nº  TOKEN     LEXEMA
1   def       def
1   ent       ent
1   ID        funcion
1   (         (
1   ent       ent
1   ID        a
1   )         )
2   {         {
3   retornar  retornar
3   ID        a
3   +         +
3   NUM       5
3   +         +
3   NUM       8
3   .         .
4   }         }
5   ent       ent
5   ini       ini
5   (         (
5   )         )
6   {         {
7   var       var
8   {         {
9   car       car
9   ID        a
9   =         =
9   LET       'a'
9   .         .
10  cad       cad
10  ID        b345678
10  =         =
10  PAL       "555hogggg555la"
10  .         .
11  dec       dec
11  ID        f
11  =         =
11  DEC       35,0
11  .         .
12  }         }
13  si        si
13  (         (
13  (         (
13  ID        a
13  &         &
13  ID        b
13  )         )
13  |         |
13  (         (
13  ID        c
13  &         &
13  NUM       0
13  )         )
13  )         )
14  {         {
15  ID        a
15  =         =
15  NUM       8
15  .         .
16  }         }
17  quizas    quizas
17  (         (
17  ID        a
17  &         &
17  ID        b
17  )         )
18  {         {
19  ID        a
19  =         =
19  NUM       7
19  .         .
20  }         }
21  sino      sino
22  {         {
23  ID        a
23  =         =
23  NUM       6
23  .         .
24  }         }
25  bucle     bucle
25  (         (
25  ID        f
25  <         <
25  NUM       10
25  &         &
25  NUM       4
25  <         <
25  NUM       4
25  )         )
26  {         {
27  ID        f
27  +         +
27  NUM       1
27  .         .
28  llamar    llamar
28  ID        funcion
28  (         (
28  ID        f
28  +         +
28  NUM       4
28  +         +
28  NUM       5
28  +         +
28  NUM       5
28  +         +
28  NUM       5
28  )         )
28  .         .
29  cortar    cortar
29  .         .
30  }         }
32  quizas    quizas
32  (         (
32  NUM       4
32  <         <
32  NUM       76
32  )         )
35  ID        a
35  +         +
35  NUM       6
35  .         .
36  ID        a
36  ==        ==
36  LET       'b'
36  .         .
37  cad       cad
37  =         =
37  PAL       "u"
37  +         +
37  NUM       6
37  +         +
37  DEC       3,4
37  .         .
38  cortar    cortar
38  .         .
39  retornar  retornar
39  ID        a
39  .         .
40  }         }
Nº  TOKEN     LEXEMA
1   def       def
1   ent       ent
1   ID        funcion
1   (         (
1   ent       ent
1   ID        a
1   )         )
2   {         {
3   retornar  retornar
3   ID        a
3   +         +
3   NUM       5
3   +         +
3   NUM       8
3   .         .
4   }         }
5   ent       ent
5   ini       ini
5   (         (
5   )         )
6   {         {
7   var       var
8   {         {
9   car       car
9   ID        a
9   =         =
9   LET       'a'
9   .         .
10  cad       cad
10  ID        b345678
10  =         =
10  PAL       "555hogggg555la"
10  .         .
11  dec       dec
11  ID        f
11  =         =
11  DEC       35,0
11  .         .
12  }         }
13  si        si
13  (         (
13  (         (
13  ID        a
13  &         &
13  ID        b
13  )         )
13  |         |
13  (         (
13  ID        c
13  &         &
13  NUM       0
13  )         )
13  )         )
14  {         {
15  ID        a
15  =         =
15  NUM       8
15  .         .
16  }         }
17  quizas    quizas
17  (         (
17  ID        a
17  &         &
17  ID        b
17  )         )
18  {         {
19  ID        a
19  =         =
19  NUM       7
19  .         .
20  }         }
21  sino      sino
22  {         {
23  ID        a
23  =         =
23  NUM       6
23  .         .
24  }         }
25  bucle     bucle
25  (         (
25  ID        f
25  <         <
25  NUM       10
25  &         &
25  NUM       4
25  <         <
25  NUM       4
25  )         )
26  {         {
27  ID        f
27  +         +
27  NUM       1
27  .         .
28  llamar    llamar
28  ID        funcion
28  (         (
28  ID        f
28  +         +
28  NUM       4
28  +         +
28  NUM       5
28  +         +
28  NUM       5
28  +         +
28  NUM       5
28  )         )
28  .         .
29  cortar    cortar
29  .         .
30  }         }
32  quizas    quizas
32  (         (
32  NUM       4
32  <         <
32  NUM       76
32  )         )
35  ID        a
35  +         +
35  NUM       6
35  .         .
36  ID        a
36  ==        ==
36  LET       'b'
36  .         .
37  cad       cad
37  =         =
37  PAL       "u"
37  +         +
37  NUM       6
37  +         +
37  DEC       3,4
37  .         .
38  cortar    cortar
38  .         .
39  retornar  retornar
39  ID        a
39  .         .
40  }         }
Nº  TOKEN     LEXEMA
1   def       def
1   ent       ent
1   ID        funcion
1   (         (
1   ent       ent
1   ID        a
1   )         )
2   {         {
3   retornar  retornar
3   ID        a
3   +         +
3   NUM       5
3   +         +
3   NUM       8
3   .         .
4   }         }
5   ent       ent
5   ini       ini
5   (         (
5   )         )
6   {         {
7   var       var
8   {         {
9   car       car
9   ID        a
9   =         =
9   LET       'a'
9   .         .
10  cad       cad
10  ID        b345678
10  =         =
10  PAL       "555hogggg555la"
10  .         .
11  dec       dec
11  ID        f
11  =         =
11  DEC       35,0
11  .         .
12  }         }
13  si        si
13  (         (
13  (         (
13  ID        a
13  &         &
13  ID        b
13  )         )
13  |         |
13  (         (
13  ID        c
13  &         &
13  NUM       0
13  )         )
13  )         )
14  {         {
15  ID        a
15  =         =
15  NUM       8
15  .         .
16  }         }
17  quizas    quizas
17  (         (
17  ID        a
17  &         &
17  ID        b
17  )         )
18  {         {
19  ID        a
19  =         =
19  NUM       7
19  .         .
20  }         }
21  sino      sino
22  {         {
23  ID        a
23  =         =
23  NUM       6
23  .         .
24  }         }
25  bucle     bucle
25  (         (
25  ID        f
25  <         <
25  NUM       10
25  &         &
25  NUM       4
25  <         <
25  NUM       4
25  )         )
26  {         {
27  ID        f
27  +         +
27  NUM       1
27  .         .
28  llamar    llamar
28  ID        funcion
28  (         (
28  ID        f
28  +         +
28  NUM       4
28  +         +
28  NUM       5
28  +         +
28  NUM       5
28  +         +
28  NUM       5
28  )         )
28  .         .
29  cortar    cortar
29  .         .
30  }         }
32  quizas    quizas
32  (         (
32  NUM       4
32  <         <
32  NUM       76
32  )         )
35  ID        a
35  +         +
35  NUM       6
35  .         .
36  ID        a
36  ==        ==
36  LET       'b'
36  .         .
37  cad       cad
37  =         =
37  PAL       "u"
37  +         +
37  NUM       6
37  +         +
37  DEC       3,4
37  .         .
38  cortar    cortar
38  .         .
39  retornar  retornar
39  ID        a
39  .         .
40  }         }
Nº  TOKEN     LEXEMA
1   def       def
1   ent       ent
1   ID        funcion
1   (         (
1   ent       ent
1   ID        a
1   )         )
2   {         {
3   retornar  retornar
3   ID        a
3   +         +
3   NUM       5
3   +         +
3   NUM       8
3   .         .
4   }         }
5   ent       ent
5   ini       ini
5   (         (
5   )         )
6   {         {
7   var       var
8   {         {
9   car       car
9   ID        a
9   =         =
9   LET       'a'
9   .         .
10  cad       cad
10  ID        b345678
10  =         =
10  PAL       "555hogggg555la"
10  .         .
11  dec       dec
11  ID        f
11  =         =
11  DEC       35,0
11  .         .
12  }         }
13  si        si
13  (         (
13  (         (
13  ID        a
13  &         &
13  ID        b
13  )         )
13  |         |
13  (         (
13  ID        c
13  &         &
13  NUM       0
13  )         )
13  )         )
14  {         {
15  ID        a
15  =         =
15  NUM       8
15  .         .
16  }         }
17  quizas    quizas
17  (         (
17  ID        a
17  &         &
17  ID        b
17  )         )
18  {         {
19  ID        a
19  =         =
19  NUM       7
19  .         .
20  }         }
21  sino      sino
22  {         {
23  ID        a
23  =         =
23  NUM       6
23  .         .
24  }         }
25  bucle     bucle
25  (         (
25  ID        f
25  <         <
25  NUM       10
25  &         &
25  NUM       4
25  <         <
25  NUM       4
25  )         )
26  {         {
27  ID        f
27  +         +
27  NUM       1
27  .         .
28  llamar    llamar
28  ID        funcion
28  (         (
28  ID        f
28  +         +
28  NUM       4
28  +         +
28  NUM       5
28  +         +
28  NUM       5
28  +         +
28  NUM       5
28  )         )
28  .         .
29  cortar    cortar
29  .         .
30  }         }
32  quizas    quizas
32  (         (
32  NUM       4
32  <         <
32  NUM       76
32  )         )
35  ID        a
35  +         +
35  NUM       6
35  .         .
36  ID        a
36  ==        ==
36  LET       'b'
36  .         .
37  cad       cad
37  =         =
37  PAL       "u"
37  +         +
37  NUM       6
37  +         +
37  DEC       3,4
37  .         .
38  cortar    cortar
38  .         .
39  retornar  retornar
39  ID        a
39  .         .
40  }         }
Nº  TOKEN     LEXEMA
1   def       def
1   ent       ent
1   ID        funcion
1   (         (
1   ent       ent
1   ID        a
1   )         )
2   {         {
3   retornar  retornar
3   ID        a
3   +         +
3   NUM       5
3   +         +
3   NUM       8
3   .         .
4   }         }
5   ent       ent
5   ini       ini
5   (         (
5   )         )
6   {         {
7   var       var
8   {         {
9   car       car
9   ID        a
9   =         =
9   LET       'a'
9   .         .
10  cad       cad
10  ID        b345678
10  =         =
10  PAL       "555hogggg555la"
10  .         .
11  dec       dec
11  ID        f
11  =         =
11  DEC       35,0
11  .         .
12  }         }
13  si        si
13  (         (
13  (         (
13  ID        a
13  &         &
13  ID        b
13  )         )
13  |         |
13  (         (
13  ID        c
13  &         &
13  NUM       0
13  )         )
13  )         )
14  {         {
15  ID        a
15  =         =
15  NUM       8
15  .         .
16  }         }
17  quizas    quizas
17  (         (
17  ID        a
17  &         &
17  ID        b
17  )         )
18  {         {
19  ID        a
19  =         =
19  NUM       7
19  .         .
20  }         }
21  sino      sino
22  {         {
23  ID        a
23  =         =
23  NUM       6
23  .         .
24  }         }
25  bucle     bucle
25  (         (
25  ID        f
25  <         <
25  NUM       10
25  &         &
25  NUM       4
25  <         <
25  NUM       4
25  )         )
26  {         {
27  ID        f
27  +         +
27  NUM       1
27  .         .
28  llamar    llamar
28  ID        funcion
28  (         (
28  ID        f
28  +         +
28  NUM       4
28  +         +
28  NUM       5
28  +         +
28  NUM       5
28  +         +
28  NUM       5
28  )         )
28  .         .
29  cortar    cortar
29  .         .
30  }         }
32  quizas    quizas
32  (         (
32  NUM       4
32  <         <
32  NUM       76
32  )         )
35  ID        a
35  +         +
35  NUM       6
35  .         .
36  ID        a
36  ==        ==
36  LET       'b'
36  .         .
37  cad       cad
37  =         =
37  PAL       "u"
37  +         +
37  NUM       6
37  +         +
37  DEC       3,4
37  .         .
38  cortar    cortar
38  .         .
39  retornar  retornar
39  ID        a
39  .         .
40  }         }
Nº  TOKEN     LEXEMA
1   def       def
1   ent       ent
1   ID        funcion
1   (         (
1   ent       ent
1   ID        a
1   )         )
2   {         {
3   retornar  retornar
3   ID        a
3   +         +
3   (         (
3   NUM       5
3   +         +
3   NUM       8
3   )         )
3   .         .
4   }         }
5   ent       ent
5   ini       ini
5   (         (
5   )         )
6   {         {
7   var       var
8   {         {
9   car       car
9   ID        a
9   =         =
9   LET       'a'
9   .         .
10  cad       cad
10  ID        b345678
10  =         =
10  PAL       "555hogggg555la"
10  .         .
11  dec       dec
11  ID        f
11  =         =
11  DEC       35,0
11  .         .
12  }         }
13  si        si
13  (         (
13  (         (
13  ID        a
13  &         &
13  ID        b
13  )         )
13  |         |
13  (         (
13  ID        c
13  &         &
13  NUM       0
13  )         )
13  )         )
14  {         {
15  ID        a
15  =         =
15  NUM       8
15  .         .
16  }         }
17  quizas    quizas
17  (         (
17  ID        a
17  &         &
17  ID        b
17  )         )
18  {         {
19  ID        a
19  =         =
19  NUM       7
19  .         .
20  }         }
21  sino      sino
22  {         {
23  ID        a
23  =         =
23  NUM       6
23  .         .
24  }         }
25  bucle     bucle
25  (         (
25  ID        f
25  <         <
25  NUM       10
25  &         &
25  NUM       4
25  <         <
25  NUM       4
25  )         )
26  {         {
27  ID        f
27  +         +
27  NUM       1
27  .         .
28  llamar    llamar
28  ID        funcion
28  (         (
28  ID        f
28  +         +
28  NUM       4
28  +         +
28  NUM       5
28  +         +
28  NUM       5
28  +         +
28  NUM       5
28  )         )
28  .         .
29  cortar    cortar
29  .         .
30  }         }
32  quizas    quizas
32  (         (
32  NUM       4
32  <         <
32  NUM       76
32  )         )
35  ID        a
35  +         +
35  NUM       6
35  .         .
36  ID        a
36  ==        ==
36  LET       'b'
36  .         .
37  cad       cad
37  =         =
37  PAL       "u"
37  +         +
37  NUM       6
37  +         +
37  DEC       3,4
37  .         .
38  cortar    cortar
38  .         .
39  retornar  retornar
39  ID        a
39  .         .
40  }         }
Nº  TOKEN     LEXEMA
1   def       def
1   ent       ent
1   ID        funcion
1   (         (
1   ent       ent
1   ID        a
1   )         )
2   {         {
3   retornar  retornar
3   ID        a
3   +         +
3   (         (
3   NUM       5
3   +         +
3   NUM       8
3   )         )
3   .         .
4   }         }
5   ent       ent
5   ini       ini
5   (         (
5   )         )
6   {         {
7   var       var
8   {         {
9   car       car
9   ID        a
9   =         =
9   LET       'a'
9   .         .
10  cad       cad
10  ID        b345678
10  =         =
10  PAL       "555hogggg555la"
10  .         .
11  dec       dec
11  ID        f
11  =         =
11  DEC       35,0
11  .         .
12  }         }
13  si        si
13  (         (
13  (         (
13  ID        a
13  &         &
13  ID        b
13  )         )
13  |         |
13  (         (
13  ID        c
13  &         &
13  NUM       0
13  )         )
13  )         )
14  {         {
15  ID        a
15  =         =
15  NUM       8
15  .         .
16  }         }
17  quizas    quizas
17  (         (
17  ID        a
17  &         &
17  ID        b
17  )         )
18  {         {
19  ID        a
19  =         =
19  NUM       7
19  .         .
20  }         }
21  sino      sino
22  {         {
23  ID        a
23  =         =
23  NUM       6
23  .         .
24  }         }
25  bucle     bucle
25  (         (
25  (         (
25  ID        f
25  <         <
25  NUM       10
25  )         )
25  &         &
25  (         (
25  NUM       4
25  <         <
25  NUM       4
25  )         )
25  )         )
26  {         {
27  ID        f
27  +         +
27  NUM       1
27  .         .
28  llamar    llamar
28  ID        funcion
28  (         (
28  ID        f
28  +         +
28  NUM       4
28  +         +
28  NUM       5
28  +         +
28  NUM       5
28  +         +
28  NUM       5
28  )         )
28  .         .
29  cortar    cortar
29  .         .
30  }         }
32  quizas    quizas
32  (         (
32  NUM       4
32  <         <
32  NUM       76
32  )         )
35  ID        a
35  +         +
35  NUM       6
35  .         .
36  ID        a
36  ==        ==
36  LET       'b'
36  .         .
37  cad       cad
37  =         =
37  PAL       "u"
37  +         +
37  NUM       6
37  +         +
37  DEC       3,4
37  .         .
38  cortar    cortar
38  .         .
39  retornar  retornar
39  ID        a
39  .         .
40  }         }
Nº  TOKEN     LEXEMA
1   def       def
1   ent       ent
1   ID        funcion
1   (         (
1   ent       ent
1   ID        a
1   )         )
2   {         {
3   retornar  retornar
3   ID        a
3   +         +
3   (         (
3   NUM       5
3   +         +
3   NUM       8
3   )         )
3   .         .
4   }         }
5   ent       ent
5   ini       ini
5   (         (
5   )         )
6   {         {
7   var       var
8   {         {
9   car       car
9   ID        a
9   =         =
9   LET       'a'
9   .         .
10  cad       cad
10  ID        b345678
10  =         =
10  PAL       "555hogggg555la"
10  .         .
11  dec       dec
11  ID        f
11  =         =
11  DEC       35,0
11  .         .
12  }         }
13  si        si
13  (         (
13  (         (
13  ID        a
13  &         &
13  ID        b
13  )         )
13  |         |
13  (         (
13  ID        c
13  &         &
13  NUM       0
13  )         )
13  )         )
14  {         {
15  ID        a
15  =         =
15  NUM       8
15  .         .
16  }         }
17  quizas    quizas
17  (         (
17  ID        a
17  &         &
17  ID        b
17  )         )
18  {         {
19  ID        a
19  =         =
19  NUM       7
19  .         .
20  }         }
21  sino      sino
22  {         {
23  ID        a
23  =         =
23  NUM       6
23  .         .
24  }         }
25  bucle     bucle
25  (         (
25  (         (
25  ID        f
25  <         <
25  NUM       10
25  )         )
25  &         &
25  (         (
25  NUM       4
25  <         <
25  NUM       4
25  )         )
25  )         )
26  {         {
27  ID        f
27  +         +
27  NUM       1
27  .         .
28  llamar    llamar
28  ID        funcion
28  (         (
28  (         (
28  ID        f
28  +         +
28  NUM       4
28  )         )
28  +         +
28  (         (
28  NUM       5
28  +         +
28  (         (
28  NUM       5
28  +         +
28  NUM       5
28  )         )
28  )         )
28  )         )
28  .         .
29  cortar    cortar
29  .         .
30  }         }
32  quizas    quizas
32  (         (
32  NUM       4
32  <         <
32  NUM       76
32  )         )
35  ID        a
35  +         +
35  NUM       6
35  .         .
36  ID        a
36  ==        ==
36  LET       'b'
36  .         .
37  cad       cad
37  =         =
37  PAL       "u"
37  +         +
37  NUM       6
37  +         +
37  DEC       3,4
37  .         .
38  cortar    cortar
38  .         .
39  retornar  retornar
39  ID        a
39  .         .
40  }         }
Nº  TOKEN     LEXEMA
1   def       def
1   ent       ent
1   ID        funcion
1   (         (
1   ent       ent
1   ID        a
1   )         )
2   {         {
3   retornar  retornar
3   ID        a
3   +         +
3   (         (
3   NUM       5
3   +         +
3   NUM       8
3   )         )
3   .         .
4   }         }
5   ent       ent
5   ini       ini
5   (         (
5   )         )
6   {         {
7   var       var
8   {         {
9   car       car
9   ID        a
9   =         =
9   LET       'a'
9   .         .
10  cad       cad
10  ID        b345678
10  =         =
10  PAL       "555hogggg555la"
10  .         .
11  dec       dec
11  ID        f
11  =         =
11  DEC       35,0
11  .         .
12  }         }
13  si        si
13  (         (
13  (         (
13  ID        a
13  &         &
13  ID        b
13  )         )
13  |         |
13  (         (
13  ID        c
13  &         &
13  NUM       0
13  )         )
13  )         )
14  {         {
15  ID        a
15  =         =
15  NUM       8
15  .         .
16  }         }
17  quizas    quizas
17  (         (
17  ID        a
17  &         &
17  ID        b
17  )         )
18  {         {
19  ID        a
19  =         =
19  NUM       7
19  .         .
20  }         }
21  sino      sino
22  {         {
23  ID        a
23  =         =
23  NUM       6
23  .         .
24  }         }
25  bucle     bucle
25  (         (
25  (         (
25  ID        f
25  <         <
25  NUM       10
25  )         )
25  &         &
25  (         (
25  NUM       4
25  <         <
25  NUM       4
25  )         )
25  )         )
26  {         {
27  ID        f
27  +         +
27  NUM       1
27  .         .
28  llamar    llamar
28  ID        funcion
28  (         (
28  (         (
28  ID        f
28  +         +
28  NUM       4
28  )         )
28  +         +
28  (         (
28  NUM       5
28  +         +
28  (         (
28  NUM       5
28  +         +
28  NUM       5
28  )         )
28  )         )
28  )         )
28  .         .
29  cortar    cortar
29  .         .
30  }         }
34  ID        a
34  +         +
34  NUM       6
34  .         .
35  ID        a
35  ==        ==
35  LET       'b'
35  .         .
36  cad       cad
36  =         =
36  PAL       "u"
36  +         +
36  NUM       6
36  +         +
36  DEC       3,4
36  .         .
37  cortar    cortar
37  .         .
38  retornar  retornar
38  ID        a
38  .         .
39  }         }
Nº  TOKEN     LEXEMA
1   def       def
1   ent       ent
1   ID        funcion
1   (         (
1   ent       ent
1   ID        a
1   )         )
2   {         {
3   retornar  retornar
3   ID        a
3   +         +
3   (         (
3   NUM       5
3   +         +
3   NUM       8
3   )         )
3   .         .
4   }         }
5   ent       ent
5   ini       ini
5   (         (
5   )         )
6   {         {
7   var       var
8   {         {
9   car       car
9   ID        a
9   =         =
9   LET       'a'
9   .         .
10  cad       cad
10  ID        b345678
10  =         =
10  PAL       "555hogggg555la"
10  .         .
11  dec       dec
11  ID        f
11  =         =
11  DEC       35,0
11  .         .
12  }         }
13  si        si
13  (         (
13  (         (
13  ID        a
13  &         &
13  ID        b
13  )         )
13  |         |
13  (         (
13  ID        c
13  &         &
13  NUM       0
13  )         )
13  )         )
14  {         {
15  ID        a
15  =         =
15  NUM       8
15  .         .
16  }         }
17  quizas    quizas
17  (         (
17  ID        a
17  &         &
17  ID        b
17  )         )
18  {         {
19  ID        a
19  =         =
19  NUM       7
19  .         .
20  }         }
21  sino      sino
22  {         {
23  ID        a
23  =         =
23  NUM       6
23  .         .
24  }         }
25  bucle     bucle
25  (         (
25  (         (
25  ID        f
25  <         <
25  NUM       10
25  )         )
25  &         &
25  (         (
25  NUM       4
25  <         <
25  NUM       4
25  )         )
25  )         )
26  {         {
27  ID        f
27  +         +
27  NUM       1
27  .         .
28  llamar    llamar
28  ID        funcion
28  (         (
28  (         (
28  ID        f
28  +         +
28  NUM       4
28  )         )
28  +         +
28  (         (
28  NUM       5
28  +         +
28  (         (
28  NUM       5
28  +         +
28  NUM       5
28  )         )
28  )         )
28  )         )
28  .         .
29  cortar    cortar
29  .         .
30  }         }
31  bucle     bucle
31  (         (
31  NUM       5
Nº  TOKEN     LEXEMA
1   def       def
1   ent       ent
1   ID        funcion
1   (         (
1   ent       ent
1   ID        a
1   )         )
2   {         {
3   retornar  retornar
3   ID        a
3   +         +
3   (         (
3   NUM       5
3   +         +
3   NUM       8
3   )         )
3   .         .
4   }         }
5   ent       ent
5   ini       ini
5   (         (
5   )         )
6   {         {
7   var       var
8   {         {
9   car       car
9   ID        a
9   =         =
9   LET       'a'
9   .         .
10  cad       cad
10  ID        b345678
10  =         =
10  PAL       "555hogggg555la"
10  .         .
11  dec       dec
11  ID        f
11  =         =
11  DEC       35,0
11  .         .
12  }         }
13  si        si
13  (         (
13  (         (
13  ID        a
13  &         &
13  ID        b
13  )         )
13  |         |
13  (         (
13  ID        c
13  &         &
13  NUM       0
13  )         )
13  )         )
14  {         {
15  ID        a
15  =         =
15  NUM       8
15  .         .
16  }         }
17  quizas    quizas
17  (         (
17  ID        a
17  &         &
17  ID        b
17  )         )
18  {         {
19  ID        a
19  =         =
19  NUM       7
19  .         .
20  }         }
21  sino      sino
22  {         {
23  ID        a
23  =         =
23  NUM       6
23  .         .
24  }         }
25  bucle     bucle
25  (         (
25  (         (
25  ID        f
25  <         <
25  NUM       10
25  )         )
25  &         &
25  (         (
25  NUM       4
25  <         <
25  NUM       4
25  )         )
25  )         )
26  {         {
27  ID        f
27  +         +
27  NUM       1
27  .         .
28  llamar    llamar
28  ID        funcion
28  (         (
28  (         (
28  ID        f
28  +         +
28  NUM       4
28  )         )
28  +         +
28  (         (
28  NUM       5
28  +         +
28  (         (
28  NUM       5
28  +         +
28  NUM       5
28  )         )
28  )         )
28  )         )
28  .         .
29  cortar    cortar
29  .         .
30  }         }
31  bucle     bucle
31  (         (
31  NUM       5
31  /         /
31  =         =
31  NUM       8
31  )         )
32  {         {
33  ID        b
33  +         +
33  NUM       4
33  .         .
34  ID        if
34  (         (
34  ID        b
34  <         <
34  NUM       8
34  )         )
35  {         {
36  cortar    cortar
36  .         .
37  }         }
38  }         }
40  cortar    cortar
41  quizas    quizas
41  (         (
41  NUM       4
41  <         <
41  NUM       76
41  )         )
44  ID        a
44  +         +
44  NUM       6
44  .         .
45  ID        a
45  ==        ==
45  LET       'b'
45  .         .
46  cad       cad
46  =         =
46  PAL       "u"
46  +         +
46  NUM       6
46  +         +
46  DEC       3,4
46  .         .
47  cortar    cortar
47  .         .
48  retornar  retornar
48  ID        a
48  .         .
49  }         }
Nº  TOKEN     LEXEMA
1   def       def
1   ent       ent
1   ID        funcion
1   (         (
1   ent       ent
1   ID        a
1   )         )
2   {         {
3   retornar  retornar
3   ID        a
3   +         +
3   (         (
3   NUM       5
3   +         +
3   NUM       8
3   )         )
3   .         .
4   }         }
5   ent       ent
5   ini       ini
5   (         (
5   )         )
6   {         {
7   var       var
8   {         {
9   car       car
9   ID        a
9   =         =
9   LET       'a'
9   .         .
10  cad       cad
10  ID        b345678
10  =         =
10  PAL       "555hogggg555la"
10  .         .
11  dec       dec
11  ID        f
11  =         =
11  DEC       35,0
11  .         .
12  }         }
13  si        si
13  (         (
13  (         (
13  ID        a
13  &         &
13  ID        b
13  )         )
13  |         |
13  (         (
13  ID        c
13  &         &
13  NUM       0
13  )         )
13  )         )
14  {         {
15  ID        a
15  =         =
15  NUM       8
15  .         .
16  }         }
17  quizas    quizas
17  (         (
17  ID        a
17  &         &
17  ID        b
17  )         )
18  {         {
19  ID        a
19  =         =
19  NUM       7
19  .         .
20  }         }
21  sino      sino
22  {         {
23  ID        a
23  =         =
23  NUM       6
23  .         .
24  }         }
25  bucle     bucle
25  (         (
25  (         (
25  ID        f
25  <         <
25  NUM       10
25  )         )
25  &         &
25  (         (
25  NUM       4
25  <         <
25  NUM       4
25  )         )
25  )         )
26  {         {
27  ID        f
27  +         +
27  NUM       1
27  .         .
28  llamar    llamar
28  ID        funcion
28  (         (
28  (         (
28  ID        f
28  +         +
28  NUM       4
28  )         )
28  +         +
28  (         (
28  NUM       5
28  +         +
28  (         (
28  NUM       5
28  +         +
28  NUM       5
28  )         )
28  )         )
28  )         )
28  .         .
29  cortar    cortar
29  .         .
30  }         }
31  bucle     bucle
31  (         (
31  NUM       5
31  /=        /=
31  NUM       8
31  )         )
32  {         {
33  ID        b
33  +         +
33  NUM       4
33  .         .
34  ID        if
34  (         (
34  ID        b
34  <         <
34  NUM       8
34  )         )
35  {         {
36  cortar    cortar
36  .         .
37  }         }
38  }         }
40  cortar    cortar
41  quizas    quizas
41  (         (
41  NUM       4
41  <         <
41  NUM       76
41  )         )
44  ID        a
44  +         +
44  NUM       6
44  .         .
45  ID        a
45  ==        ==
45  LET       'b'
45  .         .
46  cad       cad
46  =         =
46  PAL       "u"
46  +         +
46  NUM       6
46  +         +
46  DEC       3,4
46  .         .
47  cortar    cortar
47  .         .
48  retornar  retornar
48  ID        a
48  .         .
49  }         }
Nº  TOKEN     LEXEMA
1   def       def
1   ent       ent
1   ID        funcion
1   (         (
1   ent       ent
1   ID        a
1   )         )
2   {         {
3   retornar  retornar
3   ID        a
3   +         +
3   (         (
3   NUM       5
3   +         +
3   NUM       8
3   )         )
3   .         .
4   }         }
5   ent       ent
5   ini       ini
5   (         (
5   )         )
6   {         {
7   var       var
8   {         {
9   car       car
9   ID        a
9   =         =
9   LET       'a'
9   .         .
10  cad       cad
10  ID        b345678
10  =         =
10  PAL       "555hogggg555la"
10  .         .
11  dec       dec
11  ID        f
11  =         =
11  DEC       35,0
11  .         .
12  }         }
13  si        si
13  (         (
13  (         (
13  ID        a
13  &         &
13  ID        b
13  )         )
13  |         |
13  (         (
13  ID        c
13  &         &
13  NUM       0
13  )         )
13  )         )
14  {         {
15  ID        a
15  =         =
15  NUM       8
15  .         .
16  }         }
17  quizas    quizas
17  (         (
17  ID        a
17  &         &
17  ID        b
17  )         )
18  {         {
19  ID        a
19  =         =
19  NUM       7
19  .         .
20  }         }
21  sino      sino
22  {         {
23  ID        a
23  =         =
23  NUM       6
23  .         .
24  }         }
25  bucle     bucle
25  (         (
25  (         (
25  ID        f
25  <         <
25  NUM       10
25  )         )
25  &         &
25  (         (
25  NUM       4
25  <         <
25  NUM       4
25  )         )
25  )         )
26  {         {
27  ID        f
27  +         +
27  NUM       1
27  .         .
28  llamar    llamar
28  ID        funcion
28  (         (
28  (         (
28  ID        f
28  +         +
28  NUM       4
28  )         )
28  +         +
28  (         (
28  NUM       5
28  +         +
28  (         (
28  NUM       5
28  +         +
28  NUM       5
28  )         )
28  )         )
28  )         )
28  .         .
29  cortar    cortar
29  .         .
30  }         }
31  bucle     bucle
31  (         (
31  NUM       5
31  /=        /=
31  NUM       8
31  )         )
32  {         {
33  ID        b
33  +         +
33  NUM       4
33  .         .
34  ID        if
34  (         (
34  ID        b
34  <         <
34  NUM       8
34  )         )
35  {         {
36  cortar    cortar
36  .         .
37  }         }
38  }         }
40  cortar    cortar
41  quizas    quizas
41  (         (
41  NUM       4
41  <         <
41  NUM       76
41  )         )
44  ID        a
44  +         +
44  NUM       6
44  .         .
45  ID        a
45  ==        ==
45  LET       'b'
45  .         .
46  cad       cad
46  =         =
46  PAL       "u"
46  +         +
46  NUM       6
46  +         +
46  DEC       3,4
46  .         .
47  cortar    cortar
47  .         .
48  retornar  retornar
48  ID        a
48  .         .
49  }         }
Nº  TOKEN     LEXEMA
1   def       def
1   ent       ent
1   ID        funcion
1   (         (
1   ent       ent
1   ID        a
1   )         )
2   {         {
3   retornar  retornar
3   ID        a
3   +         +
3   (         (
3   NUM       5
3   +         +
3   NUM       8
3   )         )
3   .         .
4   }         }
5   ent       ent
5   ini       ini
5   (         (
5   )         )
6   {         {
7   var       var
8   {         {
9   car       car
9   ID        a
9   =         =
9   LET       'a'
9   .         .
10  cad       cad
10  ID        b345678
10  =         =
10  PAL       "555hogggg555la"
10  .         .
11  dec       dec
11  ID        f
11  =         =
11  DEC       35,0
11  .         .
12  }         }
13  si        si
13  (         (
13  (         (
13  ID        a
13  &         &
13  ID        b
13  )         )
13  |         |
13  (         (
13  ID        c
13  &         &
13  NUM       0
13  )         )
13  )         )
14  {         {
15  ID        a
15  =         =
15  NUM       8
15  .         .
16  }         }
17  quizas    quizas
17  (         (
17  ID        a
17  &         &
17  ID        b
17  )         )
18  {         {
19  ID        a
19  =         =
19  NUM       7
19  .         .
20  }         }
21  sino      sino
22  {         {
23  ID        a
23  =         =
23  NUM       6
23  .         .
24  }         }
25  bucle     bucle
25  (         (
25  (         (
25  ID        f
25  <         <
25  NUM       10
25  )         )
25  &         &
25  (         (
25  NUM       4
25  <         <
25  NUM       4
25  )         )
25  )         )
26  {         {
27  ID        f
27  +         +
27  NUM       1
27  .         .
28  llamar    llamar
28  ID        funcion
28  (         (
28  (         (
28  ID        f
28  +         +
28  NUM       4
28  )         )
28  +         +
28  (         (
28  NUM       5
28  +         +
28  (         (
28  NUM       5
28  +         +
28  NUM       5
28  )         )
28  )         )
28  )         )
28  .         .
29  cortar    cortar
29  .         .
30  }         }
31  bucle     bucle
31  (         (
31  NUM       5
31  /=        /=
31  NUM       8
31  )         )
32  {         {
33  ID        b
33  +         +
33  NUM       4
33  .         .
34  si        si
34  (         (
34  ID        b
34  <         <
34  NUM       8
34  )         )
35  {         {
36  cortar    cortar
36  .         .
37  }         }
38  }         }
40  cortar    cortar
41  quizas    quizas
41  (         (
41  NUM       4
41  <         <
41  NUM       76
41  )         )
44  ID        a
44  +         +
44  NUM       6
44  .         .
45  ID        a
45  ==        ==
45  LET       'b'
45  .         .
46  cad       cad
46  =         =
46  PAL       "u"
46  +         +
46  NUM       6
46  +         +
46  DEC       3,4
46  .         .
47  cortar    cortar
47  .         .
48  retornar  retornar
48  ID        a
48  .         .
49  }         }
