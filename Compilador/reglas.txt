s declaracion_fun td ini ( ) { cuerpo }
declaracion_fun def td ID ( parametros ) { cuerpo } declaracion_fun
td ent
td dec
td bin
td car
td cad
td vac
parametros td ID parametros_1
parametros_1 ; parametros
def_variables td ID def_variables_1 . def_variables 
def_variables_1 asignacion
def_variables_1 ; ID def_variables_1
asignacion = valor 
valor ID
valor NUM
valor DEC
valor LET
valor PAL
valor llamada_funcion
valor operacion
cuerpo var { def_variables } cuerpo
cuerpo ID asignacion . cuerpo
cuerpo operacion . cuerpo
cuerpo si ( condicion ) { cuerpo } condicionales_2 cuerpo
cuerpo bucle ( condicion ) { cuerpo_bucle } cuerpo
cuerpo llamada_funcion . cuerpo
cuerpo retornar valor .
cuerpo_bucle var { def_variables } cuerpo_bucle
cuerpo_bucle ID asignacion . cuerpo_bucle
cuerpo_bucle operacion . cuerpo_bucle
cuerpo_bucle si ( condicion ) { cuerpo_bucle } condicionales_2_bucle cuerpo_bucle
cuerpo_bucle bucle ( condicion ) { cuerpo_bucle } cuerpo_bucle
cuerpo_bucle llamada_funcion . cuerpo_bucle
cuerpo_bucle cortar .
cuerpo retornar valor .
operacion operacion_1 op operacion_1
operacion_1 valor
operacion_1 ( valor )
op +
op -
op *
op /
op <
op >
op <=
op >=
op ==
op /=
op &
op |
condicionales_2 quizas ( condicion ) { cuerpo } condicionales_2
condicionales_2 sino { cuerpo }
condicionales_2_bucle quizas ( condicion ) { cuerpo_bucle } condicionales_2_bucle
condicionales_2_bucle sino { cuerpo_bucle }
condicion operacion_1 op operacion_1
llamada_funcion llamar ID ( par )
par valor par_1
par_1 ; par